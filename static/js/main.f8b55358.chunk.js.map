{"version":3,"sources":["components/Search/Search.js","components/Filters/Filters.js","components/TableItem/TableItem.js","containers/TableSection/TableSection.js","restaurants.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["Search","setSearchText","useState","text","setText","handleSearch","e","key","target","type","className","placeholder","onChange","value","handleText","onKeyPress","onClick","document","querySelector","Filters","allRestaurants","setState","setGenre","state","selectState","defaultValue","allStates","map","rest","uniqueStates","Set","sort","a","b","renderStates","genre","selectGenre","allGenres","split","flat","uniqueGenres","renderGenres","TableItem","renderInfo","setRenderInfo","toggleRenderInfo","name","city","telephone","aria-label","aria-hidden","hours","address1","zip","href","website","rel","attire","renderMoreInfo","TableSection","filteredRestaurants","length","id","renderRestaurants","restaurants","lat","long","tags","App","setAllRestaurants","setFilteredRestaurants","searchText","isLoading","setLoading","useEffect","searchRestaurants","filter","lowerCaseSearchText","toLowerCase","lowerCaseName","lowerCaseCity","lowerCaseGenre","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8b55358.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const Search = ({ setSearchText }) => {\n  const [text, setText] = useState('');\n\n  const handleText = (e) => {\n    setText(e.target.value);\n  }\n\n  const handleSearch = (e) => {\n    if (e.key === 'Enter' || e.target.type === 'submit') {\n      setSearchText(text);\n    }\n  }\n\n  const handleClear = () => {\n    setSearchText('');\n    document.querySelector('.input').value = '';\n  }\n\n  return (\n    <section className=\"section is-flex\">\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <input className=\"input\" type=\"text\" placeholder=\"Search\"\n            onChange={e => handleText(e)} \n            onKeyPress={(e) => handleSearch(e)} />\n        </div>\n        <div className=\"control\">\n          <button className=\"button is-danger\">\n            <span className=\"icon is-small is-right\"\n              onClick={() => handleClear()}>\n                <i className=\"fas fa-times\"></i>\n            </span>\n          </button>\n        </div>\n      </div>\n      <div className=\"field is-grouped\">\n        <p className=\"control is-expanded\"></p>\n        <button className=\"button is-danger\"\n          onClick={(e) => handleSearch(e)}>Search</button>\n      </div>\n    </section>\n  );\n}","import React from 'react';\n\nexport const Filters = ({ allRestaurants, setState, setGenre}) => {\n\n  const renderStates = (allRestaurants) => {\n    const allStates = allRestaurants.map(rest => rest.state);\n    let uniqueStates = [...new Set(allStates)];\n    uniqueStates = uniqueStates.sort((a, b) => {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return uniqueStates.map(state => <option key={state} value={state}>{state}</option> );\n  }\n\n  const renderGenres = (allRestaurants) => {\n    const allGenres = allRestaurants.map(rest => rest.genre.split(',')).flat();\n    let uniqueGenres = [...new Set(allGenres)];\n    uniqueGenres = uniqueGenres.sort((a, b) => {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return uniqueGenres.map(genre => <option key={genre} value={genre}>{genre}</option> );\n  }\n\n  const selectState = (e) => {\n    const state = e.target.value;\n    if (state === 'All') {\n      setState('');\n    } else {\n      setState(state);\n    }\n  }\n\n  const selectGenre = (e) => {\n    const genre = e.target.value;\n    if (genre === 'All') {\n      setGenre('');\n    } else {\n      setGenre(genre);\n    }\n  }\n  \n  return (\n    <section className=\"section has-background-success\">\n      <h1 className=\"title\">Filters</h1>\n      <div className=\"container is-flex\">\n        <div className=\"container\">\n          <p className=\"is-size-5-touch is-size-4\">State</p>\n          <div className=\"select\">\n            <select onChange={(e) => selectState(e)}>\n              <option value=\"All\" defaultValue>All</option>\n              {renderStates(allRestaurants)}\n            </select>\n          </div>\n        </div>\n        <div className=\"container\">\n          <p className=\"is-size-5-touch is-size-4\">Genre</p>\n          <div className=\"select\">\n            <select onChange={(e) => selectGenre(e)}>\n              <option value=\"All\" defaultValue>All</option>\n              {renderGenres(allRestaurants)}\n            </select>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","import React, { useState } from 'react';\n\nexport const TableItem = ({ rest }) => {\n  const [renderInfo, setRenderInfo] = useState(false);\n\n  const toggleRenderInfo = () => {\n    setRenderInfo(!renderInfo);\n  }\n  \n  const renderMoreInfo = (rest) => {\n    return (\n      <>\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <p>{rest.hours}</p>\n          <p>{rest.address1} <br/>{rest.city}, {rest.state} {rest.zip}</p>\n          <a href={rest.website} target=\"_blank\" rel=\"noopener noreferrer\">{rest.website}</a>\n          <p className=\"is-italic\">Attire: {rest.attire}</p>\n        </div>\n      </div>\n      <footer className=\"card-footer\">\n        <a href=\"#\" className=\"card-footer-item\"\n          onClick={() => toggleRenderInfo()}>Close</a>\n      </footer>\n      </>\n    );\n  }\n\n  const renderArrowIcon = () => {\n    if (renderInfo) {\n      return (\n        <span className=\"icon\">\n          <i className=\"fas fa-angle-up\" aria-hidden=\"true\"></i>\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"icon\">\n          <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n        </span>\n      );\n    }\n  }\n  \n  return (\n    <div className=\"card mt-4\">\n      <header className=\"card-header is-block-touch\">\n        <p className=\"card-header-title is-size-5-touch\">{rest.name}</p>\n        <p className=\"card-header-title is-size-6-mobile py-0\">{rest.city}, {rest.state}</p>\n        <p className=\"card-header-title is-size-6-mobile py-0\">{rest.telephone}</p>\n        <p className=\"card-header-title is-size-6-mobile py-0\">{rest.genre}</p>\n        <a className=\"card-header-icon\" aria-label=\"more options\"\n          onClick={() => toggleRenderInfo()}>\n          {renderArrowIcon()}\n        </a>\n      </header>\n      {renderInfo && renderMoreInfo(rest)}\n    </div>\n  );\n}","import React from 'react';\nimport { TableItem } from '../../components/TableItem/TableItem';\n\nexport const TableSection = ({ filteredRestaurants }) => {\n  \n  const renderRestaurants = (filteredRestaurants) => {\n    if (filteredRestaurants.length) {\n      return filteredRestaurants.map(rest => <TableItem key={rest.id} rest={rest} />);\n    } else {\n      return <p>No Restaurants Found</p>;\n    }\n  }\n\n  return (\n    <section className=\"section has-background-primary\">\n      <h1 className=\"title has-text-white\">Restaurants:</h1>\n      {renderRestaurants(filteredRestaurants)}\n    </section>\n  );\n}","export const restaurants = [\n  {\n    address1: \"501 Prince George St\",\n    attire: \"business casual\",\n    city: \"Williamsburg\",\n    genre: \"American,Seafood,International,Asian,Cafe\",\n    hours: \"Tue-Sat 10:00 AM-5:30 PM\",\n    id: \"651628a1-9cea-4755-ac68-eaed5a0bb188\",\n    lat: \"37.272483\",\n    long: \"-76.707708\",\n    name: \"A Chef's Kitchen\",\n    state: \"VA\",\n    tags: \"Social,Food and Dining,Restaurants,American,Social,Food and Dining,Restaurants,Seafood\",\n    telephone: \"(757) 564-8500\",\n    website: \"http://www.achefskitchen.biz\",\n    zip: \"23185\"\n  },\n  {\n    address1: \"677 Broadway\",\n    attire: \"business casual\",\n    city: \"Albany\",\n    genre: \"Steak,American,Seafood,International,Traditional\",\n    hours: \"Mon-Fri 11:30 AM-10:00 PM; Sat 5:30 PM-10:00 PM\",\n    id: \"0491b590-5bc4-4899-957a-4659d01b1049\",\n    lat: \"42.653271\",\n    long: \"-73.748583\",\n    name: \"Angelo's 677 Prime\",\n    state: \"NY\",\n    tags: \"Social,Food and Dining,Restaurants,Steakhouses,Social,Food and Dining,Restaurants,Seafood,Social,Food and Dining,Restaurants,American\",\n    telephone: \"(518) 427-7463\",\n    website: \"http://www.677prime.com\",\n    zip: \"12207\"\n  },\n  {\n    address1: \"1100 N Tuttle Ave\",\n    attire: \"casual\",\n    city: \"Sarasota\",\n    genre: \"European,French,Seafood,Belgian,Vegetarian\",\n    hours: \"Mon-Sat 5:00 PM-9:00 PM\",\n    id: \"b7f72b56-3c89-4d45-9d70-f88d0db62db1\",\n    lat: \"27.347534\",\n    long: \"-82.513303\",\n    name: \"Antoine's Restaurant\",\n    state: \"FL\",\n    tags: \"Social,Food and Dining,Restaurants,French,Social,Food and Dining,Restaurants,Seafood,Social,Food and Dining,Restaurants,International\",\n    telephone: \"(941) 331-1400\",\n    website: \"http://www.antoinessarasota.com\",\n    zip: \"34237\"\n  },\n  {\n    address1: \"1200 Dobbins Rd\",\n    attire: \"business casual\",\n    city: \"Banner Elk\",\n    genre: \"American,Contemporary\",\n    hours: \"Tue-Sun 5:30 PM-10:00 PM\",\n    id: \"02d3bff4-9381-4abf-914e-787bd6ecc099\",\n    lat: \"36.15378\",\n    long: \"-81.840418\",\n    name: \"Artisanal Restaurant\",\n    state: \"NC\",\n    tags: \"Social,Food and Dining,Restaurants,American\",\n    telephone: \"(828) 898-5395\",\n    website: \"http://www.artisanalnc.com\",\n    zip: \"28604\"\n  },\n  {\n    address1: \"8731 International Dr\",\n    attire: \"Casual\",\n    city: \"Orlando\",\n    genre: \"Seafood,International,American,Oysters,Cafe\",\n    hours: \"Mon-Fri 4:00 PM-10:00 PM; Sat-Sun 2:00 PM-10:00 PM\",\n    id: \"cd273a24-f8de-44f6-8add-028e22229293\",\n    lat: \"28.43897\",\n    long: \"-81.470707\",\n    name: \"Boston Lobster Feast\",\n    state: \"FL\",\n    tags: \"Social,Food and Dining,Restaurants,Seafood,Social,Food and Dining,Restaurants,American\",\n    telephone: \"(407) 248-8606\",\n    website: \"http://www.bostonlobsterfeast.com\",\n    zip: \"32819\"\n  }\n]","import React, { useState , useEffect} from 'react';\nimport './App.scss';\nimport { getRestaurants } from '../../apiCalls';\nimport { Search } from '../../components/Search/Search';\nimport { Filters } from '../../components/Filters/Filters';\nimport { TableSection }  from '../TableSection/TableSection';\nimport { restaurants } from '../../restaurants';\n\n\n\nexport const App = () => {\n  const [allRestaurants, setAllRestaurants] = useState([]);\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [state, setState] = useState('');\n  const [genre, setGenre] = useState('');\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect( () => {\n  //   getRestaurants()\n  //     .then(data => {\n  //   setAllRestaurants(data)\n  //   setFilteredRestaurants(data)\n  // })\n    setAllRestaurants(restaurants);\n    setFilteredRestaurants(restaurants);\n    setLoading(false)\n  }, []);\n\n  useEffect(() => {\n      const restaurants = searchRestaurants();\n      setFilteredRestaurants(restaurants);\n  }, [state, genre, searchText, isLoading]);\n\n  const searchRestaurants = () => {\n    let restaurants = allRestaurants.filter(rest => {\n      const lowerCaseSearchText = searchText.toLowerCase();\n      const lowerCaseName = rest.name.toLowerCase();\n      const lowerCaseCity = rest.city.toLowerCase();\n      const lowerCaseGenre = rest.genre.toLowerCase();\n      return rest.genre.includes(genre) && (rest.state === state || state === '') &&\n        (lowerCaseName.includes(lowerCaseSearchText) ||\n            lowerCaseCity.includes(lowerCaseSearchText) ||\n            lowerCaseGenre.includes(lowerCaseSearchText));\n    });\n    return restaurants;\n  }\n\n    return (\n      <main className=\"container is-widescreen\">\n        <Search setSearchText={setSearchText} />\n        <Filters allRestaurants={allRestaurants} setState={setState} setGenre={setGenre}/>\n        <TableSection filteredRestaurants={filteredRestaurants} />\n      </main>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from '../src/containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}